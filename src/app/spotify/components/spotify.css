/* @import url("ui/customColors.css"); */

/* NOTES:
naming schema based on BEM (Block Element Modifier) methodology
Block: The standalone entity that is meaningful on its own.
Element: A part of a block that has no standalone meaning and is semantically tied to its block. They are semantically tied to their block. In BEM, elements are denoted by a double underscore __ following the block name. For example, if you had an element inside .card, it would be named .card__element-name.
Modifier: A flag on a block or element used to change appearance or behavior. are denoted by a double dash -- following the block or element name. Examples: .card--user--profile, .card--top-artists, and .card--top-tracks.

The grid-layout is the block,
grid-layout__nested is an element within the grid layout,
and card is a block that can have different modifiers like card--user--profile, card--top-artists, and card--top-tracks to indicate different types of cards. */



/* /////////////////////////
// CardGrid ///////////////
///////////////////////// */

/* The main container that centers everything */
.center-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
}

/* The grid layout that holds all cards */ 
.grid-layout {
  display: grid;
  grid-template-columns: 3fr 1fr 1fr;
  width: 75vw;
  height: 60vh;
  gap: 1rem;
  /* border-width: 3.5px;
  border-color: var(--yellow-800); */
}
 
.grid-layout__nested--horizontal {
  display: grid;
  grid-template-rows: 4fr 6fr;
  height: 100%;
  gap: 1rem;
  /* border-width: 3.5px;
  border-color: var(--yellow-800); */
}

.grid-layout__nested--vertical {
  display: grid;
  grid-template-columns: 4fr 6fr;
  height: 100%;
  gap: 1rem;
  /* border-width: 3.5px;
  border-color: var(--yellow-800); */
}

/* A generic card component; used as all section containers */
.card {
  border-radius: 0.5rem;
  border-width: 0.5px;
  background: var(--zinc-950);
  border-color: var(--zinc-800);
  border-style: solid;
  width: 100%;
  height: 100%;
}

/* Specific card for user profile */  
.card--user-profile { 
  /* border-width: 3.5px;
  border-color: var(--yellow-800);  */
}  
  
/* Specific card for top artists */  
.card--top-artists {  
  /* border-width: 3.5px;
  border-color: var(--yellow-800);  */
}  
  
/* Specific card for top tracks */  
.card--top-tracks {  
  /* border-width: 3.5px;
  border-color: var(--yellow-800);  */
}


/* /////////////////////////
// UserTopArtistCard ///////
///////////////////////// */

.top-artist-container {
  /* display: flex; what is this doing*/
  flex-direction: column;
  height: 100%;
}

.top-artist-container-header {
  height: 10%;
  font-weight: 600;
  /* padding: 1rem; */
  /* border-width: 0.5px;
  border-color: var(--zinc-800); */
  border-style: solid;
  width: 100%;
  display: flex;
  align-items: end;
  justify-content: center;
  position: relative;
  font-size: 2vh;
}

.radio-button-section-container {
  /* border-width: 0.5px;
  border-color: var(--zinc-800); */
  width: 30%;
  height: 45%;
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
}

.radio-button-container {
  /* border-width: 0.5px;
  border-color: var(--zinc-800); */
  display: flex;
  /* flex-direction: column; */
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 33%;
}

.radio-button {
  appearance: none;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  outline: none;
  box-shadow: 0 0 0 1px var(--zinc-800);
  transition: 0.5s;
  cursor: pointer;
}

.radio-button:checked {
  box-shadow: 0 0 0 1px var(--zinc-600);
}

.radio-button:checked::after {
  content: "";
  display: block;
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background: var(--zinc-600);
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.radio-button-label {
  margin-left: 10px;
  color: var(--zinc-400);
  cursor: pointer;
}


.top-artist-container-footer {
  height: 5%;
  border-color: var(--zinc-800);
  /* border-width: 0.5px; */
  border-style: solid;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pagination {
  display: flex;
  align-items: center;
  font-size: 1vh;
  padding-bottom: 0.5rem;
}

.pagination-button {
  color: var(--zinc-400);
  border: none;
  padding: 0.5rem 1rem;
  margin: 0 1rem;
  cursor: pointer;
}

.pagination-page-number {
  /* font-size: 1rem; */
  color: var(--zinc-400);
}

.top-artist-list-container {
  width: 100%;
  height: 85%;
  /* border-width: 0.5px; */
  border-color: var(--zinc-800);
}

.top-artist-list {
  height: 100%;
  list-style: none;
}

.top-artist-list-record {
  padding-left: 5%;
  display: flex;
  align-items: center;
  min-height: 10%;
  max-height: 10%;
  border-bottom: 1px solid var(--zinc-800);
  background: var(--zinc-950);
  width: 80%;
  margin: 0 auto;
  /* Center the container */
}

.top-artist-list-record-text {
  color: var(--zinc-400);
  font-size: 1.2vh;
}

.top-artist-list-record:last-child {
  border-bottom: none;
}

.top-artist-list-record:hover {
  background: var(--zinc-900);
}



/* /////////////////////////
// UserPublicData //////////
///////////////////////// */

.userPublicData-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  /* border-width: 0.5px;
  border-color: var(--yellow-800); */
}

.userPublicData-container-userPictureRow {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 60%;
  position: relative; /* This is necessary to contain the absolute child */ 
    /* border-width: 0.5px;
  border-color: var(--zinc-800); */
}


.userPictureRow-imageWrapper {  
  height: 75%;
  max-width: 150px; /* Set a max-width to ensure it doesn't grow too large */  
  aspect-ratio: 1 / 1; /* Maintain the aspect ratio to 1:1, making it a square */  
  border-radius: 50%; /* Circular shape */  
  overflow: hidden;  
  display: flex; /* To center the image inside the wrapper, this fixes the egg look. */ 
  position: relative; /*keeps this contained within the parent container Position relative for the Image component using layout="fill"*/
  /* border-width: 3.5px;
  border-color: var(--zinc-800); */
}  

.userPictureRow-imageWrapper-profileImage {
  object-fit: cover;/* covers the area without stretching */ 
}

@media (max-width: 768px) {  
  .userPictureRow-imageWrapper {  
    width: 50%; /* Increase the size on smaller screens */  
  }  
}  
  
@media (max-width: 480px) {  
  .userPictureRow-imageWrapper {  
    width: 75%; /* Further increase the size on very small screens */  
  }  
}

.userPublicData-container-userNameRow {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 20%;
  /* border-width: 0.5px;
  border-color: var(--zinc-800); */
}

.userPublicData-container-userDetailsRow {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  height: 20%;
  /* border-width: 0.5px;
  border-color: var(--zinc-800); */
}

.userPublicData-container-userDetailsRow h2 {
  margin: 0;
  font-size: 1em;
}

.userPublicData-container-userDetailsRow a {
  font-size: 1em;
}

.userPublicData-container-userDetailsRow a:hover {
  color: var(--zinc-500);
}